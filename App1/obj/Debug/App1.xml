<?xml version="1.0"?>
<doc>
<assembly>
<name>
App1
</name>
</assembly>
<members>
<member name="T:App1.App">
 <summary>
 既定の Application クラスに対してアプリケーション独自の動作を実装します。
 </summary>
</member>
<member name="M:App1.App.#ctor">
 <summary>
 単一アプリケーション オブジェクトを初期化します。これは、実行される作成したコードの
 最初の行であり、main() または WinMain() と論理的に等価です。
 </summary>
</member>
<member name="M:App1.App.OnLaunched(Windows.ApplicationModel.Activation.LaunchActivatedEventArgs)">
 <summary>
 アプリケーションがエンド ユーザーによって正常に起動されたときに呼び出されます。他のエントリ ポイントは、
 アプリケーションが特定のファイルを開くために起動されたときに
 検索結果やその他の情報を表示するために使用されます。
 </summary>
 <param name="e">起動の要求とプロセスの詳細を表示します。</param>
</member>
<member name="M:App1.App.RootFrame_FirstNavigated(System.Object,Windows.UI.Xaml.Navigation.NavigationEventArgs)">
 <summary>
 アプリを起動した後のコンテンツの移行を復元します。
 </summary>
</member>
<member name="M:App1.App.OnSuspending(System.Object,Windows.ApplicationModel.SuspendingEventArgs)">
 <summary>
 アプリケーションの実行が中断されたときに呼び出されます。
 アプリケーションが終了されるか、メモリの内容がそのままで再開されるかに
 かかわらず、アプリケーションの状態が保存されます。
 </summary>
</member>
<member name="T:App1.Common.NavigationHelper">
 <summary>
 NavigationHelper は、ページ間のナビゲーションで使用されます。 NavigationManager のコマンドを使用して、
 ナビゲーション操作を実行できるだけでなく、Windows や Windows Phone のハードウェア
 の戻るボタンでナビゲーション操作を実行するための標準マウス ショートカットおよび
 キーボード ショートカットを登録できます。さらに、SuspensionManger も統合されているため、
 ページ間で移動するときのプロセス継続時間管理および状態管理も処理できます。
 </summary>
 <remarks>
 <example>
 NavigationHelper を利用するには、この 2 つの手順に従うか、
 BasicPage などの BlankPage 以外のページ アイテム テンプレートを使用します。
 
 1) ページのコンストラクター内などの場所に NaivgationHelper インスタンスを作成し、
     LoadState イベントと SaveState イベントに対するコールバックを
     登録します。
 <code>
     Public NotInheritable Class MyPage
         Inherits Page
 
         Public Sub New()
             InitializeComponent();
             Me._navigationHelper = New Common.NavigationHelper(Me)
             AddHandler Me._navigationHelper.LoadState, AddressOf NavigationHelper_LoadState
             AddHandler Me._navigationHelper.SaveState, AddressOf NavigationHelper_SaveState
         End Sub
     
     Private Sub NavigationHelper_LoadState(sender As Object, e As Common.LoadStateEventArgs)
     End Sub
 
     Private Sub NavigationHelper_SaveState(sender As Object, e As Common.SaveStateEventArgs)
     End Sub
 </code>
 
 2) ページがナビゲーションに追加されるたびに、そのページを登録して NavigationHelper を呼び出すには、
     <see cref="M:Windows.UI.Xaml.Controls.Page.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)"/> 
     イベントと <see cref="M:Windows.UI.Xaml.Controls.Page.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)"/> イベントをオーバーライドします。
 <code>
     Protected Overrides Sub OnNavigatedTo(e As NavigationEventArgs)
         _navigationHelper.OnNavigatedTo(e)
     
     Protected Overrides Sub OnNavigatedFrom(e As NavigationEventArgs)
         _navigationHelper.OnNavigatedFrom(e)
 </code>
 </example>
 </remarks>
</member>
<member name="M:App1.Common.NavigationHelper.HardwareButtons_BackPressed(System.Object,Windows.Phone.UI.Input.BackPressedEventArgs)">
<summary>
 戻るボタンの押下を処理し、ルート フレームの履歴を使用して移動します。
 </summary>
</member>
<member name="M:App1.Common.NavigationHelper.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
 <summary>
 このページがフレームに表示されるときに呼び出されます。
 </summary>
 <param name="e">このページにどのように到達したかを説明するイベント データ。Parameter 
 プロパティは、表示するグループを示します。</param>
</member>
<member name="M:App1.Common.NavigationHelper.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
 <summary>
 このページがフレームに表示されなくなるときに呼び出されます。
 </summary>
 <param name="e">このページにどのように到達したかを説明するイベント データ。Parameter 
 プロパティは、表示するグループを示します。</param>
</member>
<member name="T:App1.Common.ObservableDictionary">
 <summary>
 IObservableMap の実装では、既定のビュー モデルとして使用するため、再入をサポート
 しています。
 </summary>
</member>
<member name="T:App1.Common.RelayCommand">
 <summary>
  
 </summary>
 <remarks></remarks>
</member>
<member name="T:App1.Common.SuspensionManager">
 <summary>
 SuspensionManager は、グローバル セッション状態をキャプチャし、アプリケーションのプロセス継続時間管理を簡略化します。
 セッション状態は、さまざまな条件下で自動的にクリアされます。
 また、セッション間で伝達しやすく、アプリケーションのクラッシュや
 アップグレード時には破棄が必要な情報を格納する場合にのみ
 アップグレードされます。
 </summary>
</member>
<member name="P:App1.Common.SuspensionManager.SessionState">
 <summary>
 現在のセッションのグローバル セッション状態へのアクセスを提供します。
 この状態は、<see cref="M:App1.Common.SuspensionManager.SaveAsync"/> によってシリアル化され、
 <see cref="M:App1.Common.SuspensionManager.RestoreAsync(System.String)"/> によって復元されます。したがって、値は
  <see cref="T:System.Runtime.Serialization.DataContractSerializer"/> によってシリアル化可能で、できるだけコンパクトになっている必要があります。
 文字列などの独立したデータ型を使用することを強くお勧めします。
 </summary>
</member>
<member name="P:App1.Common.SuspensionManager.KnownTypes">
 <summary>
 セッション状態の読み取りおよび書き込み時に <see cref="T:System.Runtime.Serialization.DataContractSerializer"/> に提供されるカスタムの型の一覧です。
 最初は空になっています。型を追加することができます。
 型を追加して、シリアル化プロセスをカスタマイズできます。
 </summary>
</member>
<member name="M:App1.Common.SuspensionManager.SaveAsync">
 <summary>
 現在の <see cref="P:App1.Common.SuspensionManager.SessionState"/> を保存します。
 <see cref="M:App1.Common.SuspensionManager.RegisterFrame(Windows.UI.Xaml.Controls.Frame,System.String,System.String)"/> で登録された <see cref="T:Windows.UI.Xaml.Controls.Frame"/> インスタンスは、現在のナビゲーション スタックも保存します。
 これは、アクティブな <see cref="T:Windows.UI.Xaml.Controls.Page"/> に状態を保存する機会を
 順番に提供します。
 </summary>
 <returns>セッション状態が保存されたときに反映される非同期タスクです。</returns>
</member>
<member name="M:App1.Common.SuspensionManager.RestoreAsync(System.String)">
 <summary>
 以前保存された <see cref="P:App1.Common.SuspensionManager.SessionState"/> を復元します。
 <see cref="M:App1.Common.SuspensionManager.RegisterFrame(Windows.UI.Xaml.Controls.Frame,System.String,System.String)"/> で登録された <see cref="T:Windows.UI.Xaml.Controls.Frame"/> インスタンスは、前のナビゲーション状態も復元します。
 これは、アクティブな <see cref="T:Windows.UI.Xaml.Controls.Page"/> に状態を復元する機会を順番に提供します。
 ます。
 </summary>
 <param name="sessionBaseKey">セッションの種類を識別するオプションのキー。
 これは複数のアプリケーションの起動シナリオを区別するために使用できます。</param>
 <returns>セッション状態が読み取られたときに反映される非同期タスクです。
 このタスクが完了するまで、<see cref="P:App1.Common.SuspensionManager.SessionState"/> のコンテンツには
 完了します。</returns>
</member>
<member name="M:App1.Common.SuspensionManager.RegisterFrame(Windows.UI.Xaml.Controls.Frame,System.String,System.String)">
 <summary>
 <see cref="T:Windows.UI.Xaml.Controls.Frame"/> インスタンスを登録し、ナビゲーション履歴を <see cref="P:App1.Common.SuspensionManager.SessionState"/> に保存して、
 ここから復元できるようにします。
 フレームは、セッション状態管理に参加する場合、作成直後に 1 回登録する必要があります。
 登録されしだい、指定されたキーに対して状態が既に復元されていれば、
 ナビゲーション履歴が直ちに復元されます。
 <see cref="M:App1.Common.SuspensionManager.RestoreAsync(System.String)"/> はナビゲーション履歴も復元します。
 </summary>
 <param name="frame">ナビゲーション履歴を管理する必要があるインスタンスです
 <see cref="T:App1.Common.SuspensionManager"/></param>
 <param name="sessionStateKey">ナビゲーション関連情報を格納するのに
 使用される <see cref="P:App1.Common.SuspensionManager.SessionState"/> への一意キーです。</param>
 <param name="sessionBaseKey">セッションの種類を識別するオプションのキー。
 これは複数のアプリケーションの起動シナリオを区別するために使用できます。</param>
</member>
<member name="M:App1.Common.SuspensionManager.UnregisterFrame(Windows.UI.Xaml.Controls.Frame)">
 <summary>
 <see cref="P:App1.Common.SuspensionManager.SessionState"/> から <see cref="M:App1.Common.SuspensionManager.RegisterFrame(Windows.UI.Xaml.Controls.Frame,System.String,System.String)"/> によって以前登録された <see cref="T:Windows.UI.Xaml.Controls.Frame"/> の関連付けを解除します。
 以前キャプチャされたナビゲーション状態は
 削除されます。
 </summary>
 <param name="frame">ナビゲーション履歴を管理する必要がなくなった
 管理されます。</param>
</member>
<member name="M:App1.Common.SuspensionManager.SessionStateForFrame(Windows.UI.Xaml.Controls.Frame)">
 <summary>
 指定された <see cref="T:Windows.UI.Xaml.Controls.Frame"/> に関連付けられているセッション状態のストレージを提供します。
 <see cref="M:App1.Common.SuspensionManager.RegisterFrame(Windows.UI.Xaml.Controls.Frame,System.String,System.String)"/> で以前登録されたフレームには、
 グローバルの <see cref="P:App1.Common.SuspensionManager.SessionState"/> の一部として自動的に保存および復元されるセッション状態があります。
 登録されていないフレームは遷移状態です。
 遷移状態は、ナビゲーション キャッシュから破棄されたページを復元する場合に
 ナビゲーション キャッシュ。
 </summary>
 <remarks>アプリケーションは、フレームのセッション状態を直接処理するのではなく、<see cref="T:App1.Common.NavigationHelper"/> に依存して
 ページ固有の状態を管理するように選択できます。</remarks>
 <param name="frame">セッション状態が必要なインスタンスです。</param>
 <returns><see cref="P:App1.Common.SuspensionManager.SessionState"/> と同じシリアル化機構の影響を受ける状態の
 <see cref="P:App1.Common.SuspensionManager.SessionState"/>。</returns>
</member>
<member name="T:App1.Data.SampleDataItem">
 <summary>
 汎用項目データ モデル。
 </summary>
</member>
<member name="T:App1.Data.SampleDataGroup">
 <summary>
 汎用グループ データ モデル。
 </summary>
</member>
<member name="T:App1.Data.SampleDataSource">
 <summary>
 静的な json ファイルから読み取られたコンテンツを使用して、グループおよびアイテムのコレクションを作成します。
 
 SampleDataSource は、プロジェクト内の静的な json ファイルから読み取られたデータを使用して
 初期化します。これにより、設計時と実行時の両方のサンプル データが得られます。
 </summary>
</member>
<member name="M:App1.HubPage.#ctor">
 <summary>
 グループ化された項目のコレクションが表示されるページです。
 </summary>
</member>
<member name="P:App1.HubPage.NavigationHelper">
 <summary>
 この <see cref="T:Windows.UI.Xaml.Controls.Page"/> に関連付けられた <see cref="P:App1.HubPage.NavigationHelper"/> を取得します。
 </summary>
</member>
<member name="P:App1.HubPage.DefaultViewModel">
 <summary>
 この <see cref="T:Windows.UI.Xaml.Controls.Page"/> のビュー モデルを取得します。
 これは厳密に型指定されたビュー モデルに変更できます。
 </summary>
</member>
<member name="M:App1.HubPage.NavigationHelper_LoadState(System.Object,App1.Common.LoadStateEventArgs)">
 <summary>
 このページには、移動中に渡されるコンテンツを設定します。前のセッションからページを
 再作成する場合は、保存状態も指定されます。
 </summary>
 <param name="sender">
 イベントのソース (通常、<see cref="P:App1.HubPage.NavigationHelper"/>)。
 </param>
 <param name="e">このページが最初に要求されたときに
 <see cref="M:Windows.UI.Xaml.Controls.Frame.Navigate(System.Type)"/> に渡されたナビゲーション パラメーターと、
 前のセッションでこのページによって保存された状態のディクショナリを提供する
 セッション。ページに初めてアクセスするとき、状態は null になります。</param>
</member>
<member name="M:App1.HubPage.NavigationHelper_SaveState(System.Object,App1.Common.SaveStateEventArgs)">
 <summary>
 アプリケーションが中断される場合、またはページがナビゲーション キャッシュから破棄される場合、
 このページに関連付けられた状態を保存します。値は、
 <see cref="P:App1.Common.SuspensionManager.SessionState"/> のシリアル化の要件に準拠する必要があります。
 </summary>
 <param name="sender">イベントのソース (通常、<see cref="P:App1.HubPage.NavigationHelper"/>)</param>
 <param name="e">シリアル化可能な状態で作成される空のディクショナリを提供するイベント データ
。</param>
</member>
<member name="M:App1.HubPage.GroupSection_ItemClick(System.Object,Windows.UI.Xaml.Controls.ItemClickEventArgs)">
 <summary>
 <see cref="T:App1.SectionPage"/> のクリックされたグループの詳細を表示します。
 </summary>
</member>
<member name="M:App1.HubPage.ItemView_ItemClick(System.Object,Windows.UI.Xaml.Controls.ItemClickEventArgs)">
 <summary>
 <see cref="T:App1.ItemPage"/> でクリックされた項目の詳細を表示します
 </summary>
</member>
<member name="M:App1.HubPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
 <summary>
 このセクションに示したメソッドは、NavigationHelper がページの
 ナビゲーション メソッドに応答できるようにするためにのみ使用します。
 <para>
 ページ固有のロジックは、
 <see cref="E:App1.Common.NavigationHelper.LoadState"/>
 および <see cref="E:App1.Common.NavigationHelper.SaveState"/>。
 LoadState メソッドでは、前のセッションで保存されたページの状態に加え、
 ナビゲーション パラメーターを使用できます。
 </para>
 </summary>
 <param name="e">このページにどのように到達したかを説明するイベント データ。</param>
</member>
<member name="P:App1.ItemPage.NavigationHelper">
 <summary>
 この <see cref="T:Windows.UI.Xaml.Controls.Page"/> に関連付けられた <see cref="P:App1.ItemPage.NavigationHelper"/> を取得します。
 </summary>
</member>
<member name="P:App1.ItemPage.DefaultViewModel">
 <summary>
 この <see cref="T:Windows.UI.Xaml.Controls.Page"/> のビュー モデルを取得します。
 これは厳密に型指定されたビュー モデルに変更できます。
 </summary>
</member>
<member name="M:App1.ItemPage.NavigationHelper_LoadState(System.Object,App1.Common.LoadStateEventArgs)">
 <summary>
 このページには、移動中に渡されるコンテンツを設定します。前のセッションからページを
 再作成する場合は、保存状態も指定されます。
 </summary>
 <param name="sender">
 イベントのソース (通常、<see cref="P:App1.ItemPage.NavigationHelper"/>)。
 </param>
 <param name="e">このページが最初に要求されたときに
 <see cref="M:Windows.UI.Xaml.Controls.Frame.Navigate(System.Type)"/> に渡されたナビゲーション パラメーターと、
 前のセッションでこのページによって保存された状態のディクショナリを提供する。
 セッション。ページに初めてアクセスするとき、状態は null になります。</param>
</member>
<member name="M:App1.ItemPage.NavigationHelper_SaveState(System.Object,App1.Common.SaveStateEventArgs)">
 <summary>
 アプリケーションが中断される場合、またはページがナビゲーション キャッシュから破棄される場合、
 このページに関連付けられた状態を保存します。値は、
 <see cref="P:App1.Common.SuspensionManager.SessionState"/> のシリアル化の要件に準拠する必要があります。
 </summary>
 <param name="sender">イベントのソース (通常、<see cref="P:App1.ItemPage.NavigationHelper"/>)。</param>
 <param name="e">シリアル化可能な状態で作成される空のディクショナリを提供するイベント データ
。</param>
</member>
<member name="M:App1.ItemPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
 <summary>
 このセクションに示したメソッドは、NavigationHelper がページの
 ナビゲーション メソッドに応答できるようにするためにのみ使用します。
 <para>
 ページ固有のロジックは、
 <see cref="E:App1.Common.NavigationHelper.LoadState"/>
 および <see cref="E:App1.Common.NavigationHelper.SaveState"/>。
 LoadState メソッドでは、前のセッションで保存されたページの状態に加え、
 ナビゲーション パラメーターを使用できます。
 </para>
 </summary>
 <param name="e">このページにどのように到達したかを説明するイベント データ。</param>
</member>
<member name="P:App1.SectionPage.NavigationHelper">
 <summary>
 この <see cref="T:Windows.UI.Xaml.Controls.Page"/> に関連付けられた <see cref="P:App1.SectionPage.NavigationHelper"/> を取得します。
 </summary>
</member>
<member name="P:App1.SectionPage.DefaultViewModel">
 <summary>
 この <see cref="T:Windows.UI.Xaml.Controls.Page"/> のビュー モデルを取得します。
 これは厳密に型指定されたビュー モデルに変更できます。
 </summary>
</member>
<member name="M:App1.SectionPage.NavigationHelper_LoadState(System.Object,App1.Common.LoadStateEventArgs)">
 <summary>
 このページには、移動中に渡されるコンテンツを設定します。前のセッションからページを
 再作成する場合は、保存状態も指定されます。
 </summary>
 <param name="sender">
 イベントのソース (通常、<see cref="P:App1.SectionPage.NavigationHelper"/>)。
 </param>
 <param name="e">このページが最初に要求されたときに
 <see cref="M:Windows.UI.Xaml.Controls.Frame.Navigate(System.Type)"/> に渡されたナビゲーション パラメーターと、
 前のセッションでこのページによって保存された状態のディクショナリを提供する
 セッション。ページに初めてアクセスするとき、状態は null になります。</param>
</member>
<member name="M:App1.SectionPage.NavigationHelper_SaveState(System.Object,App1.Common.SaveStateEventArgs)">
 <summary>
 アプリケーションが中断される場合、またはページがナビゲーション キャッシュから破棄される場合、
 このページに関連付けられた状態を保存します。値は、
 <see cref="P:App1.Common.SuspensionManager.SessionState"/> のシリアル化の要件に準拠する必要があります。
 </summary>
 <param name="sender">イベントのソース (通常、<see cref="P:App1.SectionPage.NavigationHelper"/>)</param>
 <param name="e">シリアル化可能な状態で作成される空のディクショナリを提供するイベント データ
。</param>
</member>
<member name="M:App1.SectionPage.ItemView_ItemClick(System.Object,Windows.UI.Xaml.Controls.ItemClickEventArgs)">
 <summary>
 <see cref="T:App1.ItemPage"/> でクリックされた項目の詳細を表示します
 </summary>
</member>
<member name="M:App1.SectionPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
 <summary>
 このセクションに示したメソッドは、NavigationHelper がページの
 ナビゲーション メソッドに応答できるようにするためにのみ使用します。
 <para>
 ページ固有のロジックは、
 <see cref="E:App1.Common.NavigationHelper.LoadState"/>
 および <see cref="E:App1.Common.NavigationHelper.SaveState"/>。
 LoadState メソッドでは、前のセッションで保存されたページの状態に加え、
 ナビゲーション パラメーターを使用できます。
 </para>
 </summary>
 <param name="e">このページにどのように到達したかを説明するイベント データ。</param>
</member>
</members>
</doc>
